<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<!--这块等于dao接口的实现  namespace必须和接口的类路径一样-->  
<mapper namespace="lishuai.base.dao.UserDao">
    <!-- 定义sql片段 -->
    <sql id="selectpart">select * from t_user </sql>
    <!-- findById必须和接口中的方法名一样  返回一个User  就是刚才的别名  如果不弄别名要连类路径一起写 麻烦-->  
    <select id="findById" parameterType="HashMap" resultType="User">  
        <include refid="selectpart"></include> where id=#{id}  
    </select>
    <select id="findByName" parameterType="HashMap" resultType="User">
        <include refid="selectpart"></include> where username=#{name}
    </select>
    <select id="selectByPage" resultType="User" >
       <include refid="selectpart"></include> 
       <where>
        <if test="userEntity.username!=null">
           username=#{userEntity.username}
        </if>
        <if test="userEntity.age!=null and userEntity.age!=0">
           and age=#{userEntity.age}
        </if>
        limit #{startNo},#{pageSize}
       </where>
    </select>
    <select id="selectList" resultType="User" parameterType="User" >
       <include refid="selectpart"></include> 
       <where>
        <if test="username!=null">
           username=#{username}
        </if>
        <if test="age!=null and age!=0">
           and age=#{age}
        </if>
       </where>
    </select>
    <insert id="insertUserEntity" parameterType="User">
     insert into 
         t_user(id,username,age,address) 
         values (#{id},#{username},#{age},#{address})   
    </insert>
    <insert id="addUserEntityBatch" parameterType="list" >
      insert into 
         t_user(id,username,age,address)
         values
         <foreach collection="list" item="item" index="index" separator="," >  
           (#{item.id},#{item.username},#{item.age},#{item.address})  
         </foreach>
    </insert>
    <update id="updateUserEntity" parameterType="User">
     update t_user 
            set id=#{id} username=#{username} age=#{age} address=#{address} 
            where id=#{id}
    </update>
</mapper> 
