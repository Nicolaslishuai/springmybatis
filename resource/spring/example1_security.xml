<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	           http://www.springframework.org/schema/aop 
	           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd           
	           http://www.springframework.org/schema/tx 
	           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	           http://www.springframework.org/schema/tool/
	           http://www.springframework.org/schema/tool/spring-tool-3.0.xsd         
	           http://www.springframework.org/schema/context
	           http://www.springframework.org/schema/context/spring-context-3.0.xsd
	           http://www.springframework.org/schema/security 
               http://www.springframework.org/schema/security/spring-security-3.1.xsd">
               
               
        <!-- 可以在接口函数(必须在接口中声明)/页面使用注解/表达式进行权限判断 。如果没用到注解则可以关闭-->
	    <sec:global-method-security pre-post-annotations="enabled" />
	    <sec:http pattern="/**/*.jpg" security="none" />
		<sec:http pattern="/**/*.jpeg" security="none" />
		<sec:http pattern="/**/*.png" security="none" />
		<sec:http pattern="/**/*.gif" security="none" />
		<sec:http pattern="/**/*.js" security="none" />
		<sec:http pattern="/**/*.ico" security="none" />
		<sec:http pattern="/**/*.css" security="none" /> 
	    
	    <sec:http pattern="/index.jsp" security="none" />
	    <sec:http pattern="/login.jsp" security="none" />
	    <sec:http pattern="/403.jsp" security="none" />

		<sec:http auto-config="true" access-denied-page="/jsp/common/403.jsp"  use-expressions="true" >
			    	              
	    <sec:form-login login-page="/login.jsp" 
	                           authentication-failure-url="/login.jsp" 
	                           default-target-url="/index.jsp" 
	                           login-processing-url="/spring_login"
	                           password-parameter="password"
	                           username-parameter="username"	                        
	                            />
	      <sec:logout logout-url="/spring_logout"  logout-success-url="/index.jsp" />                      
	      <sec:session-management invalid-session-url="/sessionTimeOut.jsp"></sec:session-management> 
	     
	     <sec:custom-filter ref="resourceAccessFilter" before="FILTER_SECURITY_INTERCEPTOR"/>  
      </sec:http>
       
      <sec:authentication-manager alias="authenticationManager">
       <sec:authentication-provider ref="authenticationProvider"/>
      </sec:authentication-manager>
      
      <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
       <property name="hideUserNotFoundExceptions" value="false"></property>
       <property name="passwordEncoder" ref="passwordEncoder"></property>
       <property name="saltSource" ref="saltSource"></property>
       <property name="userDetailsService" ref="userDetailsservice"></property>
       <property name="messageSource" ref="messageSource"></property>
      </bean>
      
      <!-- 定义上下文返回的消息的国际化。 -->
      <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:org/springframework/security/messages_zh_CN"/>
      </bean>
		
	  <!--事件监听:实现了 ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent事件，
        AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
      <bean class="org.springframework.security.authentication.event.LoggerListener" />	
      
      <!-- 用户的密码加密或解密 -->
     <bean id="passwordEncoder"
        class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
        
     <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource" >
       <property name="userPropertyToUse" value="username"></property>
     </bean>   
        
     <!-- 用户详细信息管理 : 数据源、用户缓存、启用用户组功能。  -->
     <bean id="userDetailsservice" class="lishuai.security.DefaultUserDetailsService">
     </bean>
     
     <bean id="resourceAccessFilter" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
       <property name="securityMetadataSource" ref="mysecurityMetadataSource"></property>
       <property name="authenticationManager" ref="authenticationManager"></property>
       <property name="accessDecisionManager" ref="myaccessDecision"></property>
     </bean>
     
     <bean id="mysecurityMetadataSource" class="lishuai.security.MYFilterInvocationSecurityMetadataSource"></bean>
       
     <bean id="myaccessDecision" class="lishuai.security.DefaultAccessDecisionManager">
       <property name="decisionVoters">
         <list>
          <bean class="org.springframework.security.access.vote.RoleVoter">
           <property name="rolePrefix" value=""></property>
          </bean>
         </list>
       </property>
     </bean>
     
</beans>